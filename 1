#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 typedef struct {
    char username[50];
    char password[50];
} User;
void registerUser() {
    User newUser;
    printf("请输入用户名: ");
    scanf("%s", newUser.username);
    printf("请输入密码: ");
    scanf("%s", newUser.password);
}
int loginUser() {
    User user;
    char inputUsername[50], inputPassword[50];
    FILE *fp = fopen("users.txt", "r");
    if (fp == NULL) return 0; 

    while (fscanf(fp, "%s %s", user.username, user.password) != EOF) {
        printf("请输入用户名: ");
        scanf("%s", inputUsername);
        printf("请输入密码: ");
        scanf("%s", inputPassword);
        if (strcmp(inputUsername, user.username) == 0 && strcmp(inputPassword, user.password) == 0) {
            fclose(fp);
            return 1; 
        }
    }
    fclose(fp);
    return 0; 
}
typedef struct {
    int orderID;
    char productName[50];
    int quantity;
} Order;
void createOrder() {
    Order newOrder;
    printf("请输入订单编号: ");
    scanf("%d", &newOrder.orderID);
    printf("请输入商品名称: ");
    scanf("%s", newOrder.productName);
    printf("请输入数量: ");
    scanf("%d", &newOrder.quantity);
    // 将订单信息保存到文件（略）
}

// 订单查询函数
void queryOrder() {
    int orderID;
    Order order;
    FILE *fp = fopen("orders.txt", "r");
    if (fp == NULL) {
        printf("无法打开文件\n");
        return;
    }
    printf("请输入要查询的订单编号: ");
    scanf("%d", &orderID);
    while (fscanf(fp, "%d %s %d", &order.orderID, order.productName, &order.quantity) != EOF) {
        if (order.orderID == orderID) {
            printf("订单编号: %d, 商品名称: %s, 数量: %d\n", order.orderID, order.productName, order.quantity);
            fclose(fp);
            return;
        }
    }
    printf("未找到订单编号: %d\n", orderID);
    fclose(fp);
}

// 订单修改函数
void modifyOrder() {
    int orderID;
    Order order;
    FILE *fp = fopen("orders.txt", "r");
    FILE *temp = fopen("temp.txt", "w");
    if (fp == NULL || temp == NULL) {
        printf("无法打开文件\n");
        return;
    }
    printf("请输入要修改的订单编号: ");
    scanf("%d", &orderID);
    int found = 0;
    while (fscanf(fp, "%d %s %d", &order.orderID, order.productName, &order.quantity) != EOF) {
        if (order.orderID == orderID) {
            printf("请输入新的商品名称: ");
            scanf("%s", order.productName);
            printf("请输入新的数量: ");
            scanf("%d", &order.quantity);
            fprintf(temp, "%d %s %d\n", order.orderID, order.productName, order.quantity);
            found = 1;
        } else {
            fprintf(temp, "%d %s %d\n", order.orderID, order.productName, order.quantity);
        }
    }
    fclose(fp);
    fclose(temp);
    if (found) {
        remove("orders.txt");
        rename("temp.txt", "orders.txt");
        printf("订单修改成功\n");
    } else {
        remove("temp.txt");
        printf("未找到订单编号: %d\n", orderID);
    }
}

// 订单删除函数
void deleteOrder() {
    int orderID;
    Order order;
    FILE *fp = fopen("orders.txt", "r");
    FILE *temp = fopen("temp.txt", "w");
    if (fp == NULL || temp == NULL) {
        printf("无法打开文件\n");
        return;
    }
    printf("请输入要删除的订单编号: ");
    scanf("%d", &orderID);
    int found = 0;
    while (fscanf(fp, "%d %s %d", &order.orderID, order.productName, &order.quantity) != EOF) {
        if (order.orderID != orderID) {
            fprintf(temp, "%d %s %d\n", order.orderID, order.productName, order.quantity);
        } else {
            found = 1;
        }
    }
    fclose(fp);
    fclose(temp);
    if (found) {
        remove("orders.txt");
        rename("temp.txt", "orders.txt");
        printf("订单删除成功\n");
    } else {
        remove("temp.txt");
        printf("未找到订单编号: %d\n", orderID);
    }
}

int main() {
    int choice;
    int loggedIn = 0;

    while (1) {
        if (!loggedIn) {
            printf("\n--- 欢迎使用系统 ---\n");
            printf("1. 注册\n");
            printf("2. 登录\n");
            printf("3. 退出\n");
            printf("请选择操作: ");
            scanf("%d", &choice);

            switch (choice) {
                case 1:
                    registerUser();
                    break;
                case 2:
                    if (loginUser()) {
                        loggedIn = 1;
                    } else {
                        printf("用户名或密码错误，请重试。\n");
                    }
                    break;
                case 3:
                    exit(0);
                default:
                    printf("无效选择，请重试。\n");
            }
        } else {
            printf("\n--- 已登录，请选择操作 ---\n");
            printf("1. 创建订单\n");
            printf("2. 查询订单\n");
            printf("3. 修改订单\n");
            printf("4. 删除订单\n");
            printf("5. 退出并注销\n");
            printf("请选择操作: ");
            scanf("%d", &choice);

            switch (choice) {
                case 1:
                    createOrder();
                    break;
                case 2:
                    queryOrder();
                    break;
                case 3:
                    modifyOrder();
                    break;
                case 4:
                    deleteOrder();
                    break;
                case 5:
                    loggedIn = 0;
                    break;
                default:
                    printf("无效选择，请重试。\n");
            }
        }
    }

    return 0;
}
